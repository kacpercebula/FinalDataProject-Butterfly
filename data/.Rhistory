AnteriorSpotF <- (LAnteriorSpotF + RAnteriorSpotF)/2
#Merging all data into a table
dfTempSexComparison <- data.frame(Wing.Length = c(WingLengthM, WingLengthF),
Wing.Width = c(WingWidthM, WingWidthF),
BlackPatchApex = c(BlackPatchApexM, BlackPatchApexF),
AnteriorSpotM3 = c(AnteriorSpotM, AnteriorSpotF),
row.names = c("M", "F"))
knitr::kable(dfTempSexComparison, format = "markdown")
export_table(dfTempSexComparison, format = "md")
#Making a graphable chart using dfTempSexComparison
gender <- c("M", "M", "M", "M", "F", "F", "F", "F")
characteristics <- c("WL", "WW", "Apex", "Spot", "WL", "WW", "Apex", "Spot")
values <- c("23.51381","13.04842", "8.615322", "1.987908", "23.18983", "13.14500", "10.438207", "1.987908")
dfFinalSexComparison <- data.frame(gender, characteristics, values)
# Convert the values column to numeric
dfFinalSexComparison$values <- as.numeric(dfFinalSexComparison$values)
# Create the side-by-side bar chart using ggplot2
plGenderComparison <- ggplot(dfFinalSexComparison, aes(x = characteristics, y = values, fill = gender)) +
geom_col(position = "dodge", color = "black")
plGenderComparison + labs(x = "Characteristics", y = "Values (mm)", fill = "Gender") + ggtitle("Gender Comparison")
###Question 1 done
##2 How does location (latitude, longitude, or territory) affect: Wing length/width? Apex area? Anterior spot area?
#Wing length/width
dfLocationWings <- dfPieris %>%
select(coreid, DecimalLatitudeUpdated, LWingLength, LWingWidth, RWingLength, RWingWidth)%>%
na.omit(dfLocationWings)%>%
distinct()
#Find the mean of each row
dfLocationWings <- dfLocationWings %>%
mutate(WingLength = (LWingLength + RWingLength) / 2)
dfLocationWings <- dfLocationWings %>%
mutate(WingWidth = (LWingWidth + RWingWidth) / 2)
##Apex Area
dfLocationApex <- dfPieris %>%
select(coreid, DecimalLatitudeUpdated, LBlackPatchApex, RBlackPatchApex)%>%
na.omit(dfLocationApex)%>%
distinct()
#Find the mean of each row
dfLocationApex <- dfLocationApex %>%
mutate(BlackPatchApex = (LBlackPatchApex + RBlackPatchApex) / 2)
##Anterior Spot Area
dfLocationAnt <- dfPieris %>%
select(coreid,SexUpdated, DecimalLatitudeUpdated, RAnteriorSpotM3, LAnteriorSpotM3)%>%
na.omit(dfLocalisationAnterior)%>%
distinct()
#Find the mean of each row
dfLocationAnt <- dfLocationAnt %>%
mutate(AnteriorSpot = (RAnteriorSpotM3 + LAnteriorSpotM3) / 2)
##Plots
# Length plot
plLatitudeWingLength <- ggplot(dfLocationWings, aes(x = DecimalLatitudeUpdated, y = WingLength)) +
geom_point(color = "blue") + geom_smooth()
plLatitudeWingLength + labs(y = "Wing Length (mm)", x = "Decimal Latitude") + ggtitle("Decimal Latitude vs. Wing Length")
# Width plot
plLatitudeWingWidth <- ggplot(dfLocationWings, aes(x = DecimalLatitudeUpdated, y = WingWidth)) +
geom_point(color = "red") + geom_smooth()
plLatitudeWingWidth + labs(y = "Wing Width (mm)", x = "Decimal Latitude") + ggtitle("Decimal Latitude vs. Wing Width")
# Apex plot
plLatitudeApex <- ggplot(dfLocationApex, aes(x = DecimalLatitudeUpdated, y = BlackPatchApex)) +
geom_point(color = "black") + geom_smooth()
plLatitudeApex + labs(y = "Apex Location", x = "Decimal Latitude") + ggtitle("Decimal Latitude vs. Apex Location")
# Spot plot
plLatitudeAnt <- ggplot(dfLocationAnt, aes(x = DecimalLatitudeUpdated, y = AnteriorSpot)) +
geom_point(color = "purple") + geom_smooth()
plLatitudeAnt + labs(y = "Anteior Spot Location", x = "Decimal Latitude") + ggtitle("Decimal Latitude vs. Anterior Spot Location")
### Question 2 done
#3 What is the relationship between apex area and spot area
#Apex and Spot data frame
dfApexSpotCompare <- dfPieris %>%
dplyr::select(LBlackPatchApex,RBlackPatchApex, LAnteriorSpotM3, RAnteriorSpotM3) %>%
na.omit(dfapex_spot) %>%
distinct()
#Find the mean of each row
dfApexSpotCompare <- dfApexSpotCompare %>%
mutate(Apex = (LBlackPatchApex + RBlackPatchApex) / 2)
dfApexSpotCompare <- dfApexSpotCompare %>%
mutate(Spot = (LAnteriorSpotM3 + RAnteriorSpotM3) / 2)
#Simplify data frame
dfApexSpotCompare <- dfApexSpotCompare %>%
select(Apex, Spot)
# Apex Spot plot
plApexSpot <- ggplot(dfApexSpotCompare, aes(x = Apex, y = Spot)) +
geom_point(color = "darkred") + geom_smooth(method=lm, se=FALSE)
plApexSpot + labs(y = "Spot (mm)", x = "Apex (mm)") + ggtitle("Apex area vs. Anterior Spot")
###Questions 3 done
#4 How does collection month or year affect:
##Wing length/width
dfYearWing <- dfPieris %>%
select(coreid,YearUpdated,LWingLength, LWingWidth, RWingLength, RWingWidth)%>%
na.omit(dfYearWing)%>%
distinct()
dfYearWing <- subset(dfYearWing, YearUpdated != '200')
#Find the mean of each row
dfYearWing <- dfYearWing %>%
mutate(WingLength = (LWingLength + RWingLength) / 2)
dfYearWing <- dfYearWing %>%
mutate(WingWidth = (LWingWidth + RWingWidth) / 2)
#Simplify table
dfYearWing <- dfYearWing %>%
select(YearUpdated, WingLength, WingWidth)
##Apex Area
dfYearApex <- dfPieris %>%
select(coreid,YearUpdated,LBlackPatchApex, RBlackPatchApex)%>%
na.omit(dfYearApex)%>%
distinct()
dfYearApex <- subset(dfYearApex, YearUpdated != '200')
#Find the mean of each row
dfYearApex <- dfYearApex %>%
mutate(BlackPatchApex = (LBlackPatchApex + RBlackPatchApex) / 2)
#Simplify table
dfYearApex <- dfYearApex %>%
select(YearUpdated, BlackPatchApex)
##Anterior Spot Area
dfYearAnterior <- dfPieris %>%
select(coreid,YearUpdated,LAnteriorSpotM3, RAnteriorSpotM3)%>%
na.omit(dfYearAnterior)%>%
distinct()
dfYearAnterior <- subset(dfYearAnterior, YearUpdated != '200')
#Find the mean of each row
dfYearAnterior <- dfYearAnterior %>%
mutate(AnteriorSpotM3 = (LAnteriorSpotM3 + RAnteriorSpotM3) / 2)
#Simplify table
dfYearAnterior <- dfYearAnterior %>%
select(YearUpdated, AnteriorSpotM3)
##Plots
# Length plot
plYearWingLength <- ggplot(dfYearWing, aes(x = YearUpdated, y = WingLength)) +
geom_point(color = "blue") + geom_smooth()
plYearWingLength + labs(y = "Wing Length (mm)", x = "Year") + ggtitle("How does Year affect Wing Length?")
# Width plot
plYearWingWidth <- ggplot(dfYearWing, aes(x = YearUpdated, y = WingWidth)) +
geom_point(color = "red") + geom_smooth()
plYearWingWidth + labs(y = "Wing Width (mm)", x = "Year") + ggtitle("How does Year affect Wing Width?")
#Apex plot
plYearApex <- ggplot(dfYearApex, aes(x = YearUpdated, y = BlackPatchApex)) +
geom_point(color = "black") + geom_smooth()
plYearApex + labs(y = "Apex (mm)", x = "Year") + ggtitle("How does Year affect Apex?")
# Spot plot
plYearSpot <- ggplot(dfYearAnterior, aes(x = YearUpdated, y = AnteriorSpotM3)) +
geom_point(color = "purple") + geom_smooth()
plYearSpot + labs(y = "Anterior Spot (mm)", x = "Year") + ggtitle("How does Year affect Anterior Spot?")
###Question 4 done
#T-test: find the mean male LWingLength
t.test(dfWingM$LWingLength, mu= mean(dfWingM$LWingLength), alternative = "less")
dim(dfWingM)
library(readxl)
library(dplyr)
library(ggplot2)
rm(list = ls())
#Set your working directory
setwd("~/DATA-331/FinalDataProject-Ladybug/data")
#made data frames that contain all the ORIGINAL data
summarized_lb_data <- read_excel('Ladybug Data.xlsx', .name_repair = "universal")
all_lb_data <- read.csv("Scan LadyBug Data.csv")
#made a temporary data frame with important variables from all_lb_data that I will use for analysis
temp_lb_data <- all_lb_data %>%
dplyr::select(id, catalogNumber, kingdom, scientificName, genus, year, stateProvince, county)
#Cleaning all the data in temp_lb_data
#removing null values, empty values, renaming, and overall minor changes.
#also preparing for a left join
temp_lb_data[temp_lb_data == 'Cycloneda munda	AUGIEENTB0000141'] <- 'AUGIEENTB0000141'
temp_lb_data[temp_lb_data == 'coccinellidae'] <- 'Coccinellidae'
temp_lb_data[temp_lb_data == 'IL'] <- 'Illinois'
temp_lb_data[temp_lb_data == 'iL'] <- 'Illinois'
temp_lb_data[temp_lb_data == 'Il'] <- 'Illinois'
temp_lb_data[temp_lb_data == 'IA'] <- 'Iowa'
temp_lb_data[temp_lb_data == 'ia'] <- 'Iowa'
temp_lb_data[temp_lb_data == 'Ia'] <- 'Iowa'
temp_lb_data[temp_lb_data == 'harmonia axyridis'] <- 'Harmonia axyridis'
temp_lb_data <- subset(temp_lb_data, kingdom != '')
temp_lb_data <- subset(temp_lb_data, genus != '')
temp_lb_data <- subset(temp_lb_data, county != '')
temp_lb_data <- subset(temp_lb_data, year == '2021')
summarized_lb_data <- summarized_lb_data %>%
rename('catalogNumber' = 'SCAN.CODE')
#left joining the scan data to the temp data and getting rid of null values
clean_lb_data <- temp_lb_data %>%
left_join(summarized_lb_data, by=c('catalogNumber')) %>%
na.omit(temp_lb_data)
#Intro to basic data
dfSpeciesCount <- clean_lb_data %>%
dplyr::select(stateProvince, scientificName) %>%
count(scientificName)%>%
rename('count' = 'n')
#intro plot
plSpeciesCount<-ggplot(dfSpeciesCount,
aes(scientificName,count)) +
geom_bar(stat = "identity", fill = "lavender", color = "black") +
geom_text(aes(label = signif(count)), nudge_y = 4)
theme <- theme(axis.text.x = element_text(size = 5, angle = 25))
plSpeciesCount + theme + labs(y = "Frequency", x = "Ladybug Species") + ggtitle("Ladybug Species Count")
#Question 1:
#Is there a proportional difference in the number of species found in
#certain areas between Illinois and Iowa?
#data frame for q1
dfSpeciesCountStateArea <- clean_lb_data %>%
dplyr::group_by(stateProvince, plot)%>%
rename('area' = 'plot')
dfSpeciesCountStateArea$area <- strtrim(dfSpeciesCountStateArea$area, 5)
dfSpeciesCountStateArea <- subset(dfSpeciesCountStateArea, area != 'Lp-PR')
dfSpeciesCountStateArea <- dfSpeciesCountStateArea %>%
count(area)%>%
rename('ladyBugCount' = 'n')
#graph for q1
plSpeciesCountStateArea<-ggplot(dfSpeciesCountStateArea,
aes(area,ladyBugCount, fill = stateProvince)) +
geom_bar(stat = "identity", position = 'dodge', color = "black")
plSpeciesCountStateArea + labs(y = "Ladybug Count", x = "Area", fill = "State") + ggtitle("Area vs. Ladybug Count")
###q1 done
#Question 2:
#Was there a time span where certain ladybug species may have
#been more active meaning more of them were found?
#data frame for q2
dfLadyBugDates <- clean_lb_data %>%
dplyr::select(date, scientificName)%>%
count(scientificName, date)%>%
rename("count" = "n")
#graph for q1
plLadyBugDates <- ggplot(dfLadyBugDates, aes(x=date, y=scientificName)) +
geom_point(aes(color=scientificName, size = count), show.legend = FALSE)
theme <- theme(axis.text.y = element_text(face = "bold", color = "black"), legend.position = "none")
plLadyBugDates + theme + labs(y = "Ladybug Species", x = "Date Collected") + ggtitle("Date Collected of Ladybug Species")
###q2 done
###df for q3 & q4
dfCollector<- clean_lb_data %>%
dplyr::select(collector, scientificName, plot)
#cleaning for q3 & q4
#J.Hughes name change
dfCollector[dfCollector == 'J Hughes'] <- 'J. Hughes'
dfCollector[dfCollector == 'J. Hughees'] <- 'J. Hughes'
dfCollector[dfCollector == 'j. hughes'] <- 'J. Hughes'
dfCollector[dfCollector == 'j. Hughes'] <- 'J. Hughes'
dfCollector[dfCollector == 'J. hughes'] <- 'J. Hughes'
dfCollector[dfCollector == 'jack hughes'] <- 'J. Hughes'
dfCollector[dfCollector == 'Jack Hughes'] <- 'J. Hughes'
#M. Gorsegner name change
dfCollector[dfCollector == 'm gorsegner'] <- 'M. Gorsegner'
dfCollector[dfCollector == 'm. gorsegner'] <- 'M. Gorsegner'
dfCollector[dfCollector == 'M. gorsegner'] <- 'M. Gorsegner'
dfCollector[dfCollector == 'M.Gorsegner'] <- 'M. Gorsegner'
dfCollector[dfCollector == 'Marissa Gorsegner'] <- 'M. Gorsegner'
#O. Ruffato name change
dfCollector[dfCollector == 'o. ruffatto'] <- 'O. Ruffatto'
dfCollector[dfCollector == 'O. ruffatto'] <- 'O. Ruffatto'
dfCollector[dfCollector == 'o. ruffattto'] <- 'O. Ruffatto'
dfCollector[dfCollector == 'Olivia Ruffatto'] <- 'O. Ruffatto'
dfCollector[dfCollector == 'OliviaRuffatto'] <- 'O. Ruffatto'
#V. Cervantes name change
dfCollector[dfCollector == 'v cervantes'] <- 'V. Cervantes'
dfCollector[dfCollector == 'v. cervantes'] <- 'V. Cervantes'
dfCollector[dfCollector == 'V. cervantes'] <- 'V. Cervantes'
dfCollector[dfCollector == 'V.Cervantes'] <- 'V. Cervantes'
dfCollector[dfCollector == 'Veronica Cervantes'] <- 'V. Cervantes'
dfCollector[dfCollector == 'Veronica Cervatnes'] <- 'V. Cervantes'
#Single data name change
dfCollector[dfCollector == 'Lp-PR-5'] <- 'LP-PR'
#strip string for just simple area
dfCollector$plot <- strtrim(dfCollector$plot, 5)
#Question 3:
#Is the distribution of the type of Ladybugs collected different for each Collector?
#df mutate
dfCollectorSpecies<- dfCollector %>%
count(collector, scientificName)%>%
rename('count' = 'n')
#plot for q3
plCollector <- ggplot(dfCollectorSpecies, aes(x = collector, y = count, fill = scientificName)) +
geom_bar(stat = "identity", position = "dodge")
plCollector + labs(y = "Ladybug Count", x = "Name of Collector", fill = "Ladybug Species") + ggtitle("Collector vs. Ladybug Count")
###q3 done
#Questions 4:
#Is the distribution of the area the Ladybugs were found in different for each Collector?
#df for q4
dfCollectorArea <- dfCollector %>%
count(collector, plot) %>%
rename('count' = 'n')
#plot for q4
plCollector <- ggplot(dfCollectorArea, aes(x = collector, y = count, fill = plot)) +
geom_bar(stat = "identity", position = "dodge")
plCollector + labs(y = "Area Count", x = "Name of Collector", fill = "Area") + ggtitle("Collector vs. Area Count")
###q4 done
#T-test:
t.test(dfSpeciesCount$count, mu = mean(dfSpeciesCount$count), alternative = "less")
library(readxl)
library(dplyr)
library(ggplot2)
library(knitr)
library(insight)
rm(list = ls())
#Set your working directory
setwd("~/DATA-331/FinalDataProject-Butterfly/data")
dfPieris <- read_excel("CompletePierisData_2022-03-09.xlsx", .name_repair = "universal")
#Cleaning the data
#renaming
dfPieris[dfPieris == 'male'] <- 'M'
dfPieris[dfPieris == 'male?'] <- 'M'
dfPieris[dfPieris == 'Male?'] <- 'M'
dfPieris[dfPieris == 'Male'] <- 'M'
dfPieris[dfPieris == 'female'] <- 'F'
dfPieris[dfPieris == 'F?'] <- 'F'
dfPieris[dfPieris == 'Female'] <- 'F'
dfPieris[dfPieris == 'Female?'] <- 'F'
#making numeric values
dfPieris$LWingLength <- as.numeric(dfPieris$LWingLength)
dfPieris$LWingWidth <- as.numeric(dfPieris$LWingWidth)
dfPieris$RWingLength <- as.numeric(dfPieris$RWingLength)
dfPieris$RWingWidth <- as.numeric(dfPieris$RWingWidth)
dfPieris$RBlackPatchApex <- as.numeric(dfPieris$RBlackPatchApex)
dfPieris$LBlackPatchApex <- as.numeric(dfPieris$LBlackPatchApex)
dfPieris$DecimalLatitudeUpdated <- as.numeric(dfPieris$DecimalLatitudeUpdated)
dfPieris$LAnteriorSpotM3 <- as.numeric(dfPieris$LAnteriorSpotM3)
dfPieris$RAnteriorSpotM3 <- as.numeric(dfPieris$RAnteriorSpotM3)
##1/ How does sex affect wing length/width? apex area? anterior spot area?
#Wings:
dfWing <- dfPieris %>%
select(coreid, SexUpdated, LWingLength, LWingWidth, RWingLength, RWingWidth) %>%
na.omit(dfWing)%>%
distinct()
#data frame and calculations for males
dfWingM <- subset(dfWing, SexUpdated =='M')
LWingLengthM <- mean(dfWingM$LWingLength)
LWingWidthM <- mean(dfWingM$LWingWidth)
RWingLengthM <- mean(dfWingM$RWingLength)
RWingWidthM <- mean(dfWingM$RWingWidth)
#data frame and calculations for females
dfWingF <- subset(dfWing, SexUpdated =='F')
LWingLengthF <- mean(dfWingF$LWingLength)
LWingWidthF <- mean(dfWingF$LWingWidth)
RWingLengthF <- mean(dfWingF$RWingLength)
RWingWidthF <- mean(dfWingF$RWingWidth)
#Find average for left and right
#males
WingLengthM <- (LWingLengthM + RWingLengthM)/2
WingWidthM <- (LWingWidthM + RWingWidthM)/2
#females
WingLengthF <- (LWingLengthF + RWingLengthF)/2
WingWidthF <- (LWingWidthF + RWingWidthF)/2
#Apex area:
dfApex <- dfPieris %>%
select(coreid, SexUpdated, RBlackPatchApex, LBlackPatchApex) %>%
na.omit(dfApex)%>%
distinct()
#data frame and calculations for males
dfApexM <- subset(dfApex, SexUpdated =='M')
RBlackPatchApexM <- mean(dfApexM$RBlackPatchApex)
LBlackPatchApexM <- mean(dfApexM$LBlackPatchApex)
#data frame and calculations for females
dfApexF <- subset(dfApex, SexUpdated =='F')
RBlackPatchApexF <- mean(dfApexF$RBlackPatchApex)
LBlackPatchApexF <- mean(dfApexF$LBlackPatchApex)
#Averages for both sex's
BlackPatchApexM <- (RBlackPatchApexM + LBlackPatchApexM)/2
BlackPatchApexF <- (RBlackPatchApexF + LBlackPatchApexF)/2
#Anterior Spot Area:
dfAnteriorSpot <- dfPieris %>%
select(coreid, SexUpdated, LAnteriorSpotM3, RAnteriorSpotM3) %>%
na.omit(dfAnteriorSpot)%>%
distinct()
#data frame and calculations for males
dfAnteriorSpotM <- subset(dfAnteriorSpot, SexUpdated =='M')
LAnteriorSpotM <- mean(dfAnteriorSpot$LAnteriorSpotM3)
RAnteriorSpotM <- mean(dfAnteriorSpot$RAnteriorSpotM3)
#data frame and calculations for females
dfAnteriorSpotF <- subset(dfAnteriorSpot, SexUpdated =='F')
LAnteriorSpotF <- mean(dfAnteriorSpot$LAnteriorSpotM3)
RAnteriorSpotF <- mean(dfAnteriorSpot$RAnteriorSpotM3)
#Averages for both sex's
AnteriorSpotM <- (LAnteriorSpotM + RAnteriorSpotM)/2
AnteriorSpotF <- (LAnteriorSpotF + RAnteriorSpotF)/2
#Merging all data into a table
dfTempSexComparison <- data.frame(Wing.Length = c(WingLengthM, WingLengthF),
Wing.Width = c(WingWidthM, WingWidthF),
BlackPatchApex = c(BlackPatchApexM, BlackPatchApexF),
AnteriorSpotM3 = c(AnteriorSpotM, AnteriorSpotF),
row.names = c("M", "F"))
knitr::kable(dfTempSexComparison, format = "markdown")
export_table(dfTempSexComparison, format = "md")
#Making a graphable chart using dfTempSexComparison
gender <- c("M", "M", "M", "M", "F", "F", "F", "F")
characteristics <- c("WL", "WW", "Apex", "Spot", "WL", "WW", "Apex", "Spot")
values <- c("23.51381","13.04842", "8.615322", "1.987908", "23.18983", "13.14500", "10.438207", "1.987908")
dfFinalSexComparison <- data.frame(gender, characteristics, values)
# Convert the values column to numeric
dfFinalSexComparison$values <- as.numeric(dfFinalSexComparison$values)
# Create the side-by-side bar chart using ggplot2
plGenderComparison <- ggplot(dfFinalSexComparison, aes(x = characteristics, y = values, fill = gender)) +
geom_col(position = "dodge", color = "black")
plGenderComparison + labs(x = "Characteristics", y = "Values (mm)", fill = "Gender") + ggtitle("Gender Comparison")
###Question 1 done
##2 How does location (latitude, longitude, or territory) affect: Wing length/width? Apex area? Anterior spot area?
#Wing length/width
dfLocationWings <- dfPieris %>%
select(coreid, DecimalLatitudeUpdated, LWingLength, LWingWidth, RWingLength, RWingWidth)%>%
na.omit(dfLocationWings)%>%
distinct()
#Find the mean of each row
dfLocationWings <- dfLocationWings %>%
mutate(WingLength = (LWingLength + RWingLength) / 2)
dfLocationWings <- dfLocationWings %>%
mutate(WingWidth = (LWingWidth + RWingWidth) / 2)
##Apex Area
dfLocationApex <- dfPieris %>%
select(coreid, DecimalLatitudeUpdated, LBlackPatchApex, RBlackPatchApex)%>%
na.omit(dfLocationApex)%>%
distinct()
#Find the mean of each row
dfLocationApex <- dfLocationApex %>%
mutate(BlackPatchApex = (LBlackPatchApex + RBlackPatchApex) / 2)
##Anterior Spot Area
dfLocationAnt <- dfPieris %>%
select(coreid,SexUpdated, DecimalLatitudeUpdated, RAnteriorSpotM3, LAnteriorSpotM3)%>%
na.omit(dfLocalisationAnterior)%>%
distinct()
#Find the mean of each row
dfLocationAnt <- dfLocationAnt %>%
mutate(AnteriorSpot = (RAnteriorSpotM3 + LAnteriorSpotM3) / 2)
##Plots
# Length plot
plLatitudeWingLength <- ggplot(dfLocationWings, aes(x = DecimalLatitudeUpdated, y = WingLength)) +
geom_point(color = "blue") + geom_smooth()
plLatitudeWingLength + labs(y = "Wing Length (mm)", x = "Decimal Latitude") + ggtitle("Decimal Latitude vs. Wing Length")
# Width plot
plLatitudeWingWidth <- ggplot(dfLocationWings, aes(x = DecimalLatitudeUpdated, y = WingWidth)) +
geom_point(color = "red") + geom_smooth()
plLatitudeWingWidth + labs(y = "Wing Width (mm)", x = "Decimal Latitude") + ggtitle("Decimal Latitude vs. Wing Width")
# Apex plot
plLatitudeApex <- ggplot(dfLocationApex, aes(x = DecimalLatitudeUpdated, y = BlackPatchApex)) +
geom_point(color = "black") + geom_smooth()
plLatitudeApex + labs(y = "Apex Location", x = "Decimal Latitude") + ggtitle("Decimal Latitude vs. Apex Location")
# Spot plot
plLatitudeAnt <- ggplot(dfLocationAnt, aes(x = DecimalLatitudeUpdated, y = AnteriorSpot)) +
geom_point(color = "purple") + geom_smooth()
plLatitudeAnt + labs(y = "Anteior Spot Location", x = "Decimal Latitude") + ggtitle("Decimal Latitude vs. Anterior Spot Location")
### Question 2 done
#3 What is the relationship between apex area and spot area
#Apex and Spot data frame
dfApexSpotCompare <- dfPieris %>%
dplyr::select(LBlackPatchApex,RBlackPatchApex, LAnteriorSpotM3, RAnteriorSpotM3) %>%
na.omit(dfapex_spot) %>%
distinct()
#Find the mean of each row
dfApexSpotCompare <- dfApexSpotCompare %>%
mutate(Apex = (LBlackPatchApex + RBlackPatchApex) / 2)
dfApexSpotCompare <- dfApexSpotCompare %>%
mutate(Spot = (LAnteriorSpotM3 + RAnteriorSpotM3) / 2)
#Simplify data frame
dfApexSpotCompare <- dfApexSpotCompare %>%
select(Apex, Spot)
# Apex Spot plot
plApexSpot <- ggplot(dfApexSpotCompare, aes(x = Apex, y = Spot)) +
geom_point(color = "darkred") + geom_smooth(method=lm, se=FALSE)
plApexSpot + labs(y = "Spot (mm)", x = "Apex (mm)") + ggtitle("Apex area vs. Anterior Spot")
###Questions 3 done
#4 How does collection month or year affect:
##Wing length/width
dfYearWing <- dfPieris %>%
select(coreid,YearUpdated,LWingLength, LWingWidth, RWingLength, RWingWidth)%>%
na.omit(dfYearWing)%>%
distinct()
dfYearWing <- subset(dfYearWing, YearUpdated != '200')
#Find the mean of each row
dfYearWing <- dfYearWing %>%
mutate(WingLength = (LWingLength + RWingLength) / 2)
dfYearWing <- dfYearWing %>%
mutate(WingWidth = (LWingWidth + RWingWidth) / 2)
#Simplify table
dfYearWing <- dfYearWing %>%
select(YearUpdated, WingLength, WingWidth)
##Apex Area
dfYearApex <- dfPieris %>%
select(coreid,YearUpdated,LBlackPatchApex, RBlackPatchApex)%>%
na.omit(dfYearApex)%>%
distinct()
dfYearApex <- subset(dfYearApex, YearUpdated != '200')
#Find the mean of each row
dfYearApex <- dfYearApex %>%
mutate(BlackPatchApex = (LBlackPatchApex + RBlackPatchApex) / 2)
#Simplify table
dfYearApex <- dfYearApex %>%
select(YearUpdated, BlackPatchApex)
##Anterior Spot Area
dfYearAnterior <- dfPieris %>%
select(coreid,YearUpdated,LAnteriorSpotM3, RAnteriorSpotM3)%>%
na.omit(dfYearAnterior)%>%
distinct()
dfYearAnterior <- subset(dfYearAnterior, YearUpdated != '200')
#Find the mean of each row
dfYearAnterior <- dfYearAnterior %>%
mutate(AnteriorSpotM3 = (LAnteriorSpotM3 + RAnteriorSpotM3) / 2)
#Simplify table
dfYearAnterior <- dfYearAnterior %>%
select(YearUpdated, AnteriorSpotM3)
##Plots
# Length plot
plYearWingLength <- ggplot(dfYearWing, aes(x = YearUpdated, y = WingLength)) +
geom_point(color = "blue") + geom_smooth()
plYearWingLength + labs(y = "Wing Length (mm)", x = "Year") + ggtitle("How does Year affect Wing Length?")
# Width plot
plYearWingWidth <- ggplot(dfYearWing, aes(x = YearUpdated, y = WingWidth)) +
geom_point(color = "red") + geom_smooth()
plYearWingWidth + labs(y = "Wing Width (mm)", x = "Year") + ggtitle("How does Year affect Wing Width?")
#Apex plot
plYearApex <- ggplot(dfYearApex, aes(x = YearUpdated, y = BlackPatchApex)) +
geom_point(color = "black") + geom_smooth()
plYearApex + labs(y = "Apex (mm)", x = "Year") + ggtitle("How does Year affect Apex?")
# Spot plot
plYearSpot <- ggplot(dfYearAnterior, aes(x = YearUpdated, y = AnteriorSpotM3)) +
geom_point(color = "purple") + geom_smooth()
plYearSpot + labs(y = "Anterior Spot (mm)", x = "Year") + ggtitle("How does Year affect Anterior Spot?")
###Question 4 done
#T-test: find the mean male LWingLength
t.test(dfWingM$LWingLength, mu= mean(dfWingM$LWingLength), alternative = "less")
dim(dfWingM)
